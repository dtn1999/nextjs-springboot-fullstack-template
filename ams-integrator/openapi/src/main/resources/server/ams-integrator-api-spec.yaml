openapi: 3.0.2
info:
  title: Social Media Microservice API
  version: 1.0.0
servers:
  - url: http://localhost:1616/ams
tags:
  - name: Assets management system (AMS) integrator
    description: |
      This API is used to integrate Newsmind Stories with external assets management systems (AMS).
      It provides endpoints for searching and retrieving assets.
paths:
  ###########################################
  # Providers
  ###########################################
  /providers:
    get:
      tags:
        - AMSIntegrator
      summary: List all the supported providers.
      operationId: findAllProviders
      responses:
        200:
          description: Find all providers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
        500:
          description: Unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'

  ###########################################
  # Search
  ###########################################

  /assets/search:
    get:
      tags:
        - AMSIntegrator
      summary: Search for assets.
      operationId: searchAssets
      parameters:
        - name: q
          in: query
          description: Search query.
          required: true
          schema:
            type: string
        - name: provider
          in: query
          description: Social media provider
          required: false
          schema:
            $ref: '#/components/schemas/AMSProvider'
        - name: offset
          in: query
          description: Offset for pagination.
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Limit for pagination.
          required: false
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Search results.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalAsset'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'

  /assets/{provider}/{assetId}:
    get:
      tags:
        - AMSIntegrator
      summary: Get asset by ID.
      operationId: getAssetById
      parameters:
        - name: provider
          in: path
          description: Social media provider
          required: true
          schema:
            $ref: '#/components/schemas/AMSProvider'
        - name: assetId
          in: path
          description: Asset ID.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Asset details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAsset'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'

components:
  schemas:
    ###########################################
    # Enums
    ###########################################
    AMSProvider:
      type: string
      enum:
        - AEM # Adobe Experience Manager

    MediaType:
      type: string
      enum:
        - IMAGE
        - VIDEO
        - AUDIO
        - DOCUMENT
        - OTHER
    ###########################################
    # Objects
    ###########################################
    Provider:
      type: object
      required:
        - name
        - enabled
      properties:
        name:
          $ref: '#/components/schemas/AMSProvider'
        enabled:
          type: boolean

    ExternalAsset:
      type: object
      required:
        - id
        - type
        - title
        - url
        - provider
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/MediaType'
        title:
          type: string
        url:
          type: string
        provider:
          $ref: '#/components/schemas/AMSProvider'
        createAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        metadata:
          type: object

    ProblemDetail:
      required:
        - type
        - title
        - status
        - detail
        - instance
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
        code:
          type: string
        contextData:
          type: object

spring:
  config:
    import:
      - optional:file:./.env[.properties]
      - optional:file:./core/.env[.properties]

  cache:
    caffeine:
      spec: maximumSize=${MAXIMUM_CACHE_SIZE:100},expireAfterAccess=10s
  docker:
    compose:
      enabled: true
      lifecycle-management: ${COMPOSE:start_only}
      skip:
        in-tests: true


logging:
  level:
    de.convit.microservice: DEBUG
    org.springframework.web: DEBUG

domain:
  account:
    token-refreshing-policy:
      frequency: 0 */30 * * * ?
      # Threshold in days. Default is 5 days
      threshold: ${REFRESH_TOKEN_THRESHOLD:5}

  notification-gateway:
    baseUrl: http://localhost:9992/planr-api/
    endpoint: "/socialmedia/internal/content/notify/post/complete"

  insight:
    long-crawl-schedule: 0 */30 * * * ?
    mid-crawl-schedule: 0 */30 * * * ?
    short-crawl-interval-in-ms: 1800000
    indexing-server:
      base-url: http://localhost:9995/stories-search-socialmedia

cache:
  provider-profiles:
    # Duration is given in seconds. Default is 1 hour
    time-to-live-seconds: ${PROVIDER_PROFILES_CACHE_DURATION:5}
    cache-name: ${PROVIDER_PROFILES_CACHE_NAME:providerProfiles}

platform:
  providers:
    INSTAGRAM:
      enabled: true
      oauth2:
        registration:
          clientId: ${META_OAUTH2_CLIENT_ID}
          clientSecret: ${META_OAUTH2_CLIENT_SECRET}
          redirectUri: ${META_OAUTH2_REDIRECT_URL:https://dev.stories.newsmind.de/admin/facebook-callback}
          authorization-grant-type: authorization_code
          scope:
            - email
            - public_profile
            - business_management
            - pages_show_list
            - instagram_content_publish
            - instagram_basic
            - instagram_manage_insights
        provider:
          authorizationUri: https://www.facebook.com/v17.0/dialog/oauth
          tokenUri: https://graph.facebook.com/v17.0/oauth/access_token
          userInfoUri: https://graph.facebook.com/v17.0/me
      rest:
        baseUrl: https://graph.facebook.com
        apiVersion: v18.0
      # https://developers.facebook.com/docs/instagram-platform/instagram-graph-api/reference/ig-user/media#reel-specifications
      postSpecifications:
        image:
          postTypes:
            - IMAGE
            - STORY
        video:
          postTypes:
            - STORY
            - REEL

    FACEBOOK:
      enabled: true
      oauth2:
        registration:
          clientId: ${META_OAUTH2_CLIENT_ID}
          clientSecret: ${META_OAUTH2_CLIENT_SECRET}
          redirectUri: ${META_OAUTH2_REDIRECT_URL:https://dev.stories.newsmind.de/admin/facebook-callback}
          authorization-grant-type: authorization_code
          scope:
            - public_profile
            - pages_read_engagement
            - pages_read_user_content
            - pages_show_list
            - pages_manage_posts
            - business_management
            - read_insights
        provider:
          authorizationUri: https://www.facebook.com/v17.0/dialog/oauth
          tokenUri: https://graph.facebook.com/v17.0/oauth/access_token
          userInfoUri: https://graph.facebook.com/v17.0/me
      rest:
        baseUrl: https://graph.facebook.com
        reelUrl: https://rupload.facebook.com/video-upload/v20.0
        apiVersion: v20.0
      # https://developers.facebook.com/docs/graph-api/reference/page/photos/
      # https://developers.facebook.com/docs/video-api/guides/reels-publishing
      # https://developers.facebook.com/docs/page-stories-api
      postSpecifications:
        image:
          postTypes:
            - IMAGE
            - STORY
        video:
          postTypes:
            - VIDEO
            - STORY
            - REEL

    LINKEDIN:
      enabled: true
      oauth2:
        registration:
          clientId: ${LINKEDIN_OAUTH2_CLIENT_ID}
          clientSecret: ${LINKEDIN_OAUTH2_CLIENT_SECRET}
          clientAuthenticationMethod: client_secret_post
          redirectUri: ${LINKEDIN_OAUTH2_REDIRECT_URL:http://localhost:9991/planr-api/socialmedia/callback}
          authorization-grant-type: authorization_code
          scope:
            - w_member_social
            #            - r_member_social
            - r_liteprofile
            - w_organization_social
            - r_organization_social
            - r_organization_admin
        provider:
          authorizationUri: https://www.linkedin.com/oauth/v2/authorization
          tokenUri: https://www.linkedin.com/oauth/v2/accessToken
          userInfoUri: https://api.linkedin.com/v2/me
      rest:
        baseUrl: https://api.linkedin.com
        apiVersion: 202411

    X:
      enabled: true
      oauth2:
        registration:
          clientId: ${X_OAUTH2_CLIENT_ID}
          clientSecret: ${X_OAUTH2_CLIENT_SECRET}
          redirectUri: ${X_OAUTH2_REDIRECT_URL:http://localhost:9991/planr-api/socialmedia/callback}
          authorization-grant-type: authorization_code
          # https://developer.twitter.com/en/docs/authentication/guides/v2-authentication-mapping
          scope:
            - users.read
            - tweet.write
            - tweet.read
            - like.read
            - tweet.moderate.write
            - offline.access
        provider:
          authorizationUri: https://twitter.com/i/oauth2/authorize
          tokenUri: https://api.twitter.com/2/oauth2/token
          userInfoUri: https://api.twitter.com/2/me
      rest:
        baseUrl: https://api.twitter.com
        apiVersion: 2

      keys:
        consumer-key: ${X_CONSUMER_KEY}
        consumer-secret: ${X_CONSUMER_SECRET}
        access-token: ${X_ACCESS_TOKEN}
        access-token-secret: ${X_ACCESS_TOKEN_SECRET}
      cache:
        tweets-search-cache-ttl-in-seconds: ${TWEETS_SEARCH_CACHE_TTL_IN_SECONDS:3600}
        single-tweet-search-cache-ttl-in-seconds: ${SINGLE_TWEET_SEARCH_CACHE_TTL_IN_SECONDS:86400}

    TIKTOK:
      enabled: true
      oauth2:
        registration:
          clientId: ${TIKTOK_OAUTH2_CLIENT_ID}
          clientSecret: ${TIKTOK_OAUTH2_CLIENT_SECRET}
          redirectUri: ${TIKTOK_OAUTH2_REDIRECT_URL:https://demo.stories.newsmind.de/admin/tiktok-callback}
          authorization-grant-type: authorization_code
          scope:
            - user.info.basic
#            - user.info.profile
            - video.publish
            - video.upload
            - video.list
        provider:
          authorizationUri: https://www.tiktok.com/v2/auth/authorize/
          tokenUri: https://open.tiktokapis.com/v2/oauth/token/
          userInfoUri: https://open.tiktokapis.com/v2/user/info/
      rest:
        baseUrl: https://open.tiktokapis.com/
        apiVersion: v20.0

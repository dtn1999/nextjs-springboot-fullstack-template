server:
  port: 1616
  servlet:
    context-path: /socialmedia
  compression:
    min-response-size: 2048
    enabled: true
  forward-headers-strategy: native

management:
  httpexchanges:
    recording:
      enabled: true
      include: time_taken, remote_address, request_headers, cookie_headers, response_headers

  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
    loggers:
      enabled: true

  server:
    port: 1617
    base-path: /socialmedia

spring:
  main:
    web-application-type: servlet

  application:
    name: socialmedia-service

  banner:
    location: classpath:banner.txt

  mustache:
    enabled: false

  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false

  artemis:
    mode: ${ARTEMIS_MODE:-embedded}
    embedded:
      enabled: true
    broker-url: ${JMS_SERVER_BROKER_URL:tcp://localhost:61616}

  jms:
    template:
      default-destination: ${JMS_QUEUE:publication.queue}

    listener:
      session:
        acknowledge-mode: client
      receive-timeout: 10000

  mvc:
    problemdetails:
      enabled: true

  cache:
    cache-names:
      - user-info
      - user-profiles

  liquibase:
    change-log: classpath:db/db.changelog-master.xml

  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
      - org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration
      - org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration

logging:
  level:
    de.convit.microservice: ${LOG_LEVEL:INFO}

domain:
  provider:
    request-path: "/providers"

  account:
    token-refreshing-policy:
      # Frequency is given with a cron expression. Default is every day at 00:00
      frequency: ${REFRESH_TOKEN_FREQUENCY:0 0 0 * * ?}
      # The Threshold in days. Default is 5 days
      threshold: ${REFRESH_TOKEN_THRESHOLD:5}
    cache:
      expiration-after-write-in-minutes: {CACHE_EXPIRATION_AFTER_READ_IN_MINUTES:120}

  post:
    # The maximum allowed file size is 5GB.
    # This default is based on the recommendation from AWS S3 documentation about S3 client limitations.
    # https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html
    maxMediaSizeInMb: ${MAX_MEDIA_SIZE_IN_MB:5120}
    default-s3-server:
      hostname: ${S3_HOSTNAME}
      username: ${S3_USERNAME}
      password: ${S3_PASSWORD}
      bucketName: ${S3_BUCKET_NAME}
      servicePrefix: ${S3_SERVICE_PREFIX}
      region: ${S3_REGION:}
      upload:
        maxSizeInMb: ${MAX_UPLOAD_SIZE_IN_MB:200}
    social-media-s3-server:
      hostname: ${SOCIAL_MEDIA_S3_HOSTNAME}
      username: ${SOCIAL_MEDIA_S3_USERNAME}
      password: ${SOCIAL_MEDIA_S3_PASSWORD}
      bucketName: ${SOCIAL_MEDIA_S3_BUCKET_NAME}
      servicePrefix: ${SOCIAL_MEDIA_S3_SERVICE_PREFIX}
      region: ${SOCIAL_MEDIA_S3_REGION}

  notification-gateway:
    baseUrl: ${NOTIFICATION_GATEWAY_BASE_URL}
    endpoint: ${NOTIFICATION_ENDPOINT}

  insight:
    # post indexing
    post-indexing-activated: ${POST_INDEXING_ACTIVATED:false}
    long-crawl-schedule: ${LONG_CRAWL_SCHEDULE:0 0 0 * * ?} # once per day at 00h
    short-crawl-interval-in-ms: ${SHORT_CRAWL_INTERVAL_IN_MS:120000} # 2 minutes
    indexing-server:
      baseUrl: ${SEARCH_IT_INDEXING_SERVER_BASE_URL}
    # insight metrics means the KPIs, not the indexed posts
    metrics-crawling-activated: ${METRICS_CRAWLING_ACTIVATED:false}
    mid-crawl-schedule: ${MID_CRAWL_SCHEDULE:0 0 * * * ?} # every hour
    cache:
      insightsKpis:
        expiration-after-write-in-seconds: ${INSIGHTS_KPIS_CACHE_EXPIRATION_AFTER_READ_IN_SECONDS:600}
        maximum-size: ${INSIGHTS_KPIS_CACHE_MAXIMUM_SIZE:500}
      insightsKpisSummary:
        expiration-after-write-in-seconds: ${INSIGHTS_KPIS_SUMMARY_CACHE_EXPIRATION_AFTER_READ_IN_SECONDS:600}
        maximum-size: ${INSIGHTS_KPIS_SUMMARY_CACHE_MAXIMUM_SIZE:500}
    influx-db-config:
      token: ${INFLUX_DB_TOKEN}
      bucket: ${INFLUX_DB_BUCKET}
      org: ${INFLUX_DB_ORG}
      url: ${INFLUX_DB_URL}
